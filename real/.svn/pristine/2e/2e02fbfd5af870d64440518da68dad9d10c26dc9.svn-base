package com.whut.myMap;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.whut.myMap.adapter.ScollListView;
import com.whut.myMap.adapter.SpeakGridViewAdapter;
import com.whut.myMap.adapter.CommentListViewAdapter_my.ViewHolder;
import com.whut.myMap.adapter.SpeakGridView;
import com.whut.myMap.domain.comment_message;
import com.whut.myMap.domain.trackbean;
import com.whut.myMap.entites.lbs;

import android.R.integer;
import android.app.ActionBar;
import android.app.Activity;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.Config;
import android.net.Uri;
import android.os.Bundle;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Toast;
/**
 * list为评论列表 其余从上级传 坐标不知道
 * @author xxr
 *
 */
public class guideNET extends Activity {
	private static final int GONE = 8;
	private static final int VISIBLE = 0;
	private ScollListView mListView;
	List<comment_message> list;
	private trackbean trackbean;
	private ImageView imageHead;
	private TextView name;
	private TextView date;
	private TextView content;
	private ImageView comment;
	private ImageView praise;
	private ImageView favour;
	private TextView comment_tv;
	private TextView praise_tv;
	private TextView favour_tv;
	private Button map_show;
	private int isSelected[]={0,0};
private int dongtai_id;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.speak_item_main);
		Intent intent=getIntent();
		Bundle bundle=intent.getExtras();
		trackbean=  (com.whut.myMap.domain.trackbean) bundle.getSerializable("speak_item1");
		SpeakAdapter myAdapter = new SpeakAdapter();
		if(trackbean!=null){
		Log.i("Speak_main1", ""+trackbean.getTrack().getDate());
		for(lbs lbs:trackbean.getLbsbean()){
			Log.i("lbs", lbs.getX()+"  "+lbs.getY());
		}
		}
		list=getData();
		mListView = (ScollListView) findViewById(R.id.sim_comment);
		// 把view层对象ListView和控制器BaseAdapter关联起来
		mListView.setAdapter(myAdapter);
		imageHead=(ImageView) findViewById(R.id.imgHead);
		name=(TextView) findViewById(R.id.tvName);
		date=(TextView) findViewById(R.id.tvDate);
		content=(TextView) findViewById(R.id.tvContent);
        map_show=(Button) findViewById(R.id.map_show);
		map_show.setOnClickListener(new OnClickListener() {			
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(getApplication(), GuideshowNET.class);
				Bundle bundle=new Bundle();
				bundle.putSerializable("speak_item", trackbean);
				intent.putExtras(bundle);
				startActivity(intent);				
			}
		});  
			DisplayImageOptions options = new DisplayImageOptions.Builder()//
			.showImageOnLoading(R.drawable.ic_launcher) // 加载中显示的默认图片
			.showImageOnFail(R.drawable.ic_launcher) // 设置加载失败的默认图片
			.cacheInMemory(true) // 内存缓存
			.cacheOnDisk(true) // sdcard缓存
			.bitmapConfig(Config.RGB_565)// 设置最低配置
			.build();//
	ImageLoader.getInstance().displayImage("http://www.qjis.com/uploads138/allimg/130401/110439A91-5.jpg",
			imageHead, options);
		
		name.setText("轻水");
		date.setText(trackbean.getTrack().getDate());
		content.setText(trackbean.getTrack().getWords());
		comment = (ImageView) findViewById(R.id.comment);
		praise = (ImageView) findViewById(R.id.praise);
		favour = (ImageView) findViewById(R.id.favour);
		comment_tv = (TextView) findViewById(R.id.comment_tv);
		praise_tv = (TextView) findViewById(R.id.praise_tv);
		favour_tv = (TextView) findViewById(R.id.favour_tv);
		comment.setOnClickListener(new OnClickListener() {
			@Override
			public void onClick(View v) {
				Intent intent = new Intent(guideNET.this, WriteComment.class);
				intent.putExtra("DongTai_ID", dongtai_id);
				startActivity(intent);
			}
		});
		praise.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if (isSelected[0]==0) {
					praise.setImageBitmap(BitmapFactory
							.decodeResource(getResources(),
									R.drawable.good_clicked));
					praise_tv.setText("已赞");
					isSelected[0]=1;
					
				}
				else if (isSelected[0]==1) {
					praise.setImageBitmap(BitmapFactory
							.decodeResource(getResources(),
									R.drawable.good_main));
					praise_tv.setText("赞");
					isSelected[0]=0;
				}
				
			}
		});

		favour.setOnClickListener(new OnClickListener() {
			
			@Override
			public void onClick(View v) {
				if (isSelected[1]==0) {
					favour.setImageBitmap(BitmapFactory
							.decodeResource(getResources(),
									R.drawable.favor_clicked));
					isSelected[1]=1;
				}
				else if (isSelected[1]==1) {
					favour.setImageBitmap(BitmapFactory
							.decodeResource(getResources(),
									R.drawable.favourite_main));
					isSelected[1]=0;
				}
				
			}
		});
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		super.onCreateOptionsMenu(menu);
		ActionBar mActionBar = getActionBar();
		mActionBar.setTitle(R.string.speak_main);
		mActionBar.setDisplayHomeAsUpEnabled(true);
		return true;

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		switch (item.getItemId()) {
		case android.R.id.home:
			finish();
			this.overridePendingTransition(R.anim.tran_pre_in,
					R.anim.tran_pre_out);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}

	}
	
	/**
	 * 
	 * 评论
	 * 评论，日期，被评头像，被评人名字
	 * @return
	 */
	private List<comment_message> getData() {
		List<comment_message> person = new ArrayList<comment_message>();
		for (int i = 0; i < 5; i++) {
//			comment_message model = new comment_message();
//			model.setHfuwords("哈哈，不错");
//			long time=System.currentTimeMillis();//long now = android.os.SystemClock.uptimeMillis();  
//	        SimpleDateFormat format=new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");  
//	        Date d1=new Date(time);  
//	      model.setHfutime(d1.toString());
//			model.setHfusername("佚名");
//			person.add(model);
		}
		return person;
	}
	
/**
 * 
 * CommentListViewAdapter_set一样的 点击事件是否不同？
 * @author xxr
 *
 */
	class SpeakAdapter extends BaseAdapter {
		@Override
		public int getCount() {
			// TODO Auto-generated method stub
			return list.size();
		}

		@Override
		public Object getItem(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolder holder = null;
			if (convertView == null) {
				holder = new ViewHolder();
				LayoutInflater mInflater = LayoutInflater.from(guideNET.this);
				convertView = mInflater.inflate(R.layout.comment_item, null);
				holder.ImageView = (ImageView) convertView
						.findViewById(R.id.imgHead);
				holder.name = (TextView) convertView.findViewById(R.id.tvName);
				holder.date = (TextView) convertView.findViewById(R.id.tvDate);
				holder.content = (TextView) convertView
						.findViewById(R.id.tvContent);
				convertView.setTag(holder);
			} else {
				holder = (ViewHolder) convertView.getTag();
			}
			comment_message sp = list.get(position);
			if (list != null) {
				if (holder.ImageView != null) {
					// 设置图片
					if (sp.getHuifu_user_image() == null) {
						holder.ImageView.setImageBitmap(BitmapFactory
								.decodeResource(getResources(),
										R.drawable.default_head));
					}
					else {
						Uri tempPath = Uri.parse(sp.getHuifu_user_image());
						holder.ImageView.setImageURI(tempPath);
					}
				}
				if (holder.name != null) {
					holder.name.setText(sp.getHuifu_user_name());
				}
				if (holder.date != null) {
					holder.date.setText(sp.getDate());
				}
				if (holder.content != null) {
					if(sp.getCedusername()!=null){
					holder.content.setText("回复@"+sp.getCedusername()+":"+sp.getHuifuwords());
					}else {
						holder.content.setText(sp.getHuifuwords());
					}
				}
				
			}
			return convertView;
		}

		public final class ViewHolder {
			public ImageView ImageView;
			public TextView name;
			public TextView date;
			public TextView content;
		}

	}
}