package com.whut.myMap;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.whut.myMap.adapter.CommentListViewAdapter_speak;
import com.whut.myMap.adapter.Route_Main_ListviewAdapter;
import com.whut.myMap.adapter.ScollListView;
import com.whut.myMap.adapter.SpeakGridView;
import com.whut.myMap.adapter.SpeakGridViewAdapter;
import com.whut.myMap.domain.comment_message;
import com.whut.myMap.domain.dongtaipointbean;
import com.whut.myMap.domain.dongtaitrackbean;
import com.whut.myMap.domain.trackbean;
import com.whut.myMap.entites.lbs;
import com.whut.myMap.entites.picture;
import com.whut.myMap.serverce.findshoucang;
import com.whut.myMap.serverce.findzan;
import com.whut.myMap.utils.gsonutil;
import com.whut.net.favornet;
import com.whut.net.getHuifuNet;
import com.whut.net.getOneSpeakRoute;
import com.whut.net.praisenet;

import android.app.ActionBar;
import android.app.Activity;
import android.content.Intent;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.Config;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.Window;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class Speak_Main_routeNET_ST extends Activity {
	private static final int GONE = 8;
	private static final int VISIBLE = 0;
	private ScollListView mListView;
	private Route_Main_ListviewAdapter mAdapter;
	private trackbean trackbean;
	private dongtaitrackbean dongtaibean;
	private ImageView imageHead;
	private TextView name;
	private TextView content;
	ImageView titleImg;
	private boolean iszan;
	private boolean isshoucang;
	private static int ZoF = 0;
	private static int zaned = 2;
	private int track_id;
	private int Dongtai_User_id;
	private int type = 1;
	private static String jsonstring;
	private final int SHOW_RESPONSE_PRAISE = 0;
	private final int SHOW_RESPONSE_DONGTAI = 1;
	private final int SHOW_RESPONSE_SHOUCANG = 2;
	private Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case SHOW_RESPONSE_PRAISE:
				Log.i("zai", "enene2");
				if (msg.obj != null) {
					Log.i("zai", "enene");
					if (Integer.parseInt((String) msg.obj) == 1) {
						if (iszan) {
							new findzan(getApplicationContext()).deletezaned(trackbean.getTrack().getTrack_id(),
									trackbean.getTrack().getType(), getApplicationContext());
							iszan = false;
							zaned = 0;
							ZoF = 1;
							getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
						} else {
							new findzan(getApplicationContext()).addzaned(trackbean.getTrack().getTrack_id(),
									trackbean.getTrack().getType(), getApplicationContext());
							iszan = true;
							zaned = 1;
							ZoF = 1;
							getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
						}
					} else {
						Toast.makeText(getApplication(), "Õ¯¬Á“Ï≥££¨«ÎºÏ≤ÈÕ¯¬Á£°£°", 0).show();
						return;
					}
				}
				break;
			case SHOW_RESPONSE_DONGTAI:
				Log.i("zai", "enene2");
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					gsonutil gson = new gsonutil();
					Log.i("json", jsonstring);
					System.out.println(jsonstring);
					try {
						dongtaibean = (dongtaitrackbean) gsonutil.getobject(jsonstring, dongtaitrackbean.class);
					} catch (Exception e1) {
						// TODO Auto-generated catch block
						e1.printStackTrace();
						return;
					}

					Dongtai_User_id = dongtaibean.getTrackbean().getTrack().getUser_id();
					trackbean = dongtaibean.getTrackbean();

					mAdapter.notifyDataSetChanged();
					showzan(new findzan(getApplicationContext()).findzaned(
							dongtaibean.getTrackbean().getTrack().getTrack_id(),
							dongtaibean.getTrackbean().getTrack().getType(), getApplicationContext()));
					showshoucang(new findshoucang(getApplicationContext()).findshoucanged(
							dongtaibean.getTrackbean().getTrack().getTrack_id(),
							dongtaibean.getTrackbean().getTrack().getType(), getApplicationContext()));
				
						DisplayImageOptions options = new DisplayImageOptions.Builder()//
								.showImageOnLoading(R.drawable.ic_launcher) // º”‘ÿ÷–œ‘ æµƒƒ¨»œÕº∆¨
								.showImageOnFail(R.drawable.ic_launcher) // …Ë÷√º”‘ÿ ß∞‹µƒƒ¨»œÕº∆¨
								.cacheInMemory(true) // ƒ⁄¥Êª∫¥Ê
								.cacheOnDisk(true) // sdcardª∫¥Ê
								.bitmapConfig(Config.RGB_565)// …Ë÷√◊ÓµÕ≈‰÷√
								.build();//
						try {
						ImageLoader.getInstance().displayImage(dongtaibean.getTrackbean().getUrl(), imageHead, options);
					} catch (Exception e) {
						imageHead.setImageResource(R.drawable.default_head);
					}
						try {
							ImageLoader.getInstance().displayImage(dongtaibean.getTrackbean().getTrack().getBgurl(), titleImg, options);
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
							titleImg.setImageResource(R.drawable.no_background);
						}

					name.setText(dongtaibean.getTrackbean().getUsername());
					content.setText(dongtaibean.getTrackbean().getTrack().getWords());
                 
				} else {
					Toast.makeText(getApplication(), "Õ¯¬Á“Ï≥££¨«ÎºÏ≤ÈÕ¯¬Á£°£°", 0).show();
					return;
				}
				break;
			case SHOW_RESPONSE_SHOUCANG:
				Log.i("zai", "enene2");
				if (msg.obj != null) {
					Log.i("zai", "enene");
					if (Integer.parseInt((String) msg.obj) == 1) {
						if (isshoucang) {
							new findshoucang(getApplicationContext()).deleteshoucanged(
									trackbean.getTrack().getTrack_id(), trackbean.getTrack().getType(),
									getApplicationContext());
							isshoucang = false;
							ZoF = 2;
							getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
						} else {
							new findshoucang(getApplicationContext()).addshoucanged(trackbean.getTrack().getTrack_id(),
									trackbean.getTrack().getType(), getApplicationContext());
							isshoucang = true;
							ZoF = 2;
							getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
						}
					} else if (Integer.parseInt((String) msg.obj) == 2) {
						return;
					} else {
						Toast.makeText(getApplication(), "Õ¯¬Á“Ï≥££¨«ÎºÏ≤ÈÕ¯¬Á£°£°", 0).show();
						return;
					}
				}
				break;
			}
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.speak_route);
		Intent intent = getIntent();
		track_id = intent.getIntExtra("source_id", 0);
		getData();
		mListView = (ScollListView) findViewById(R.id.ui_lv);
		mAdapter = new Route_Main_ListviewAdapter(getApplication(), trackbean);
		mListView.setAdapter(mAdapter);
		imageHead = (ImageView) findViewById(R.id.head);
		name = (TextView) findViewById(R.id.username);
		content = (TextView) findViewById(R.id.text);
		 titleImg = (ImageView) findViewById(R.id.toppic);

	}

	private void getData() {
		new Thread(new Runnable() {
			private String result;

			@Override
			public void run() {
				try {
					// TODO Auto-generated method stub
					Map<String, String> param = new HashMap<String, String>();
					param.put("source_id", track_id + "");
					param.put("type", 1 + "");
					getOneSpeakRoute gHuifuNet = new getOneSpeakRoute();
					String jsonstring1 = gHuifuNet.getOneSpeak(param);
					if (jsonstring1 != null && jsonstring1.length() > 0) {
						jsonstring = jsonstring1;
						result = "1";
					} else {
						result = "0";
						return;
					}
				} catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
					result = "2";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = SHOW_RESPONSE_DONGTAI;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	public void showzan(boolean bool) {
		if (bool) {
			iszan = true;
			ZoF = 1;
			getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
		} else {
			iszan = false;
			ZoF = 1;
			getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
		}
	}

	public void showshoucang(boolean bool) {
		if (bool) {
			isshoucang = true;
			ZoF = 2;
			getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
		} else {
			isshoucang = false;
			ZoF = 2;
			getWindow().invalidatePanelMenu(Window.FEATURE_OPTIONS_PANEL);
		}
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		getMenuInflater().inflate(R.menu.route_main_item, menu);
		ActionBar mActionBar = getActionBar();
		mActionBar.setTitle(R.string.speak_main);
		mActionBar.setDisplayHomeAsUpEnabled(true);
		mActionBar.setDisplayShowHomeEnabled(false);
		return true;

	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		switch (item.getItemId()) {
		case android.R.id.home:
			sendZanBack();
			finish();
			this.overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
			return true;
		case R.id.map:
			Intent intent = new Intent(getApplication(), TrackshowNET.class);
			Bundle bundle = new Bundle();
			bundle.putSerializable("speak_item", trackbean);
			intent.putExtras(bundle);
			startActivity(intent);
			return true;
		case R.id.good:
			new Thread(new Runnable() {
				String result;
				int isjia;

				@Override
				public void run() {
					// TODO Auto-generated method stub
					try {
						Map<String, String> param = new HashMap<String, String>();
						System.out.println(track_id);
						if (iszan)
							isjia = 0;
						else
							isjia = 1;
						param.put("type", trackbean.getTrack().getType() + "");
						param.put("sourceid", track_id + "");
						param.put("isjia", isjia + "");
						result = praisenet.praise(param);
					} catch (Exception e) {
						// TODO: handle exception
						result = "0";
					} finally {
						Message message = new Message();
						message.what = SHOW_RESPONSE_PRAISE;
						if (result != null || result != "") {
							message.obj = result.toString();
						} else {
							message.obj = "2";
						}
						handler.sendMessage(message);
					}
				}
			}).start();
			return true;
		case R.id.favor:
			new Thread(new Runnable() {
				String result;
				int isjia;

				@Override
				public void run() {
					// TODO Auto-generated method stub
					try {
						Map<String, String> param = new HashMap<String, String>();
						System.out.println(track_id);
						System.out.println(type);
						if (isshoucang)
							isjia = 0;
						else
							isjia = 1;
						param.put("isjia", isjia + "");
						param.put("type", type + "");
						param.put("sourceid", track_id + "");
						result = favornet.favor(param);
					} catch (Exception e) {
						// TODO: handle exception
						result = "0";
					} finally {
						Message message = new Message();
						message.what = SHOW_RESPONSE_SHOUCANG;
						if (result != null || result != "") {
							message.obj = result.toString();
						} else {
							message.obj = "2";
						}
						handler.sendMessage(message);
					}
				}
			}).start();
			return true;
		case R.id.comment:
			Intent intent1 = new Intent(Speak_Main_routeNET_ST.this, CommentList.class);
			comment_message cMessage = new comment_message();
			cMessage.setType(1);
			cMessage.setSource_id(track_id);
			cMessage.setHuifu_user_id(Dongtai_User_id);
			// cMessage.setCedusername();
			// cMessage.setHuifu_id(list.get(position).getHuifu_id()0);
			Bundle bundle1 = new Bundle();
			bundle1.putSerializable("comment", cMessage);
			intent1.putExtras(bundle1);
			startActivityForResult(intent1, 0);
			overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}

	}

	@Override
	public boolean onPrepareOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		switch (ZoF) {
		case 1:
			if (iszan) {
				menu.findItem(R.id.good).setIcon(R.drawable.good_clicked2);
				if (isshoucang) {
					menu.findItem(R.id.favor).setIcon(R.drawable.favor_clicked2);
				} else {
					menu.findItem(R.id.favor).setIcon(R.drawable.favourite_main2);
				}
			} else {
				menu.findItem(R.id.good).setIcon(R.drawable.good_main2);
				if (isshoucang) {
					menu.findItem(R.id.favor).setIcon(R.drawable.favor_clicked2);
				} else {
					menu.findItem(R.id.favor).setIcon(R.drawable.favourite_main2);
				}
			}
			break;
		case 2:
			if (isshoucang) {
				menu.findItem(R.id.favor).setIcon(R.drawable.favor_clicked2);
				if (iszan) {
					menu.findItem(R.id.good).setIcon(R.drawable.good_clicked2);
				} else {
					menu.findItem(R.id.good).setIcon(R.drawable.good_main2);
				}
			} else {
				menu.findItem(R.id.favor).setIcon(R.drawable.favourite_main2);
				if (iszan) {
					menu.findItem(R.id.good).setIcon(R.drawable.good_clicked2);
				} else {
					menu.findItem(R.id.good).setIcon(R.drawable.good_main2);
				}
			}
			break;
		default:
			break;
		}
		return true;
	}

	@Override
	public void onBackPressed() {
		sendZanBack();
		finish();
		this.overridePendingTransition(R.anim.tran_pre_in,
				R.anim.tran_pre_out);
		return;
	}

	protected void sendZanBack() {
		// TODO Auto-generated method stub
		Intent intent = new Intent();
		intent.putExtra("zaned", zaned);
		zaned = 2;
		setResult(RESULT_OK, intent);
	}
}