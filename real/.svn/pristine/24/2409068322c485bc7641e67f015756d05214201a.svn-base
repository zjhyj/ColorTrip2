package com.whut.myMap.adapter;

import java.util.ArrayList;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.whut.myMap.R;
import com.whut.myMap.adapter.Route_Main_ListviewAdapter.ViewHolder;
import com.whut.myMap.adapter.SpeakGridView.OnTouchInvalidPositionListener;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.domain.trackbean;

import android.content.Context;
import android.graphics.Bitmap.Config;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

public class Route_Base_ListviewAdapter extends BaseAdapter {
	trackbean track;
	private Context mContext;

	public Route_Base_ListviewAdapter(Context context, trackbean track) {
		super();
		this.track = track;
		this.mContext = context;
	}

	@Override
	public int getCount() {
		// TODO Auto-generated method stub

		try {
			return track.getRedsbean().size();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return 0;
		}

	}

	@Override
	public Object getItem(int position) {
		// TODO Auto-generated method stub
		return position;
	}

	@Override
	public long getItemId(int position) {
		// TODO Auto-generated method stub
		return track.getRedsbean().get(position).getReds().getReds_id();
	}

	@Override
	public View getView(int position, View convertView, ViewGroup parent) {
		final ViewHolder holder;
		if (convertView == null) {
			holder = new ViewHolder();
			LayoutInflater mInflater = LayoutInflater.from(mContext);
			convertView = mInflater.inflate(R.layout.route_item, null);
			holder.content = (TextView) convertView.findViewById(R.id.tvContent);
			holder.date = (TextView) convertView.findViewById(R.id.tvDate);
			holder.picture = (SpeakGridView) convertView.findViewById(R.id.tvGridview);
			convertView.setTag(holder);
		} else {
			holder = (ViewHolder) convertView.getTag();
		}
		final redsbean sp = this.track.getRedsbean().get(position);
		if (this.track != null) {
			if (holder.date != null) {
				holder.date.setText(sp.getReds().getDate().substring(0, 16));
			}
			if (holder.content != null) {
				if (sp.getReds().getWords() != null) {
					holder.content.setText(sp.getReds().getWords());
				} else {
					holder.content.setVisibility(View.GONE);
				}
			}
			DisplayImageOptions options = new DisplayImageOptions.Builder()//
					.showImageOnLoading(R.drawable.loadpic) // 加载中显示的默认图片
					.showImageOnFail(R.drawable.loadfailed) // 设置加载失败的默认图片
					.cacheInMemory(true)// 内存缓存
					.resetViewBeforeLoading(true).cacheOnDisk(true) // sdcard缓存
					.bitmapConfig(Config.RGB_565)// 设置最低配置
					.build();//
			ArrayList<String> transPicture = new ArrayList<String>();
			if (sp.getListmap() == null || sp.getListmap().size() == 0) { // 没有图片资源就隐藏GridView
				holder.picture.setVisibility(View.GONE);
			} else {

				for (int i = 0; i < sp.getListmap().size(); i++) {
					transPicture.add("file://" + sp.getListmap().get(i).getImgurl());
				}
			}
			if (sp.getListmap() == null || sp.getListmap().size() < 0) { // 没有图片资源就隐藏GridView
				holder.picture.setVisibility(View.GONE);
			} else {
				holder.picture.setAdapter(new RouteGridViewAdapter(mContext, transPicture, transPicture));
				holder.picture.setOnTouchInvalidPositionListener(new OnTouchInvalidPositionListener() {

					@Override
					public boolean onTouchInvalidPosition(int motionEvent) {
						// TODO Auto-generated method stub
						return false;
					}
				});
			}
		}

		return convertView;
	}

	public final class ViewHolder {
		public TextView date;
		public TextView content;
		private SpeakGridView picture;

	}

}
