package com.whut.myMap.fragment;

import java.util.ArrayList;
import java.util.List;

import com.whut.myMap.R;
import com.whut.myMap.Speak_Main;
import com.whut.myMap.adapter.mypointadapter;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.serverce.Redservice;

import android.app.AlertDialog;
import android.app.AlertDialog.Builder;
import android.content.DialogInterface;
import android.content.DialogInterface.OnClickListener;
import android.content.Intent;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;
public class Footprint_point extends Fragment {
	private List<redsbean> list;
	private ListView listView;
	private View mParent;
	private FragmentActivity mActivity;
	mypointadapter myAdapter;
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.listview_container,
				container, false);
		return view;
	}
	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onActivityCreated(savedInstanceState);
		mParent = getView();
		mActivity = getActivity();
		listView = (ListView) mParent
				.findViewById(R.id.fs_listview);
		list = getData();
		if(list==null){
			return;
		}
		myAdapter = new mypointadapter(list, mActivity);		
		listView.setAdapter(myAdapter);
		listView.setOnItemLongClickListener(new OnItemLongClickListener() {
			@Override
			public boolean onItemLongClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				dialogdelete(position);
				return true;
			}
		});
		listView.setOnItemClickListener(new OnItemClickListener() {
			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(getActivity(), Speak_Main.class);
				Bundle bundle=new Bundle();
				bundle.putSerializable("speak_item", list.get(position));
				intent.putExtras(bundle);
				startActivity(intent);
				getActivity().overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			}
		});
	}
	private void dialogdelete(final int position) {
		// TODO Auto-generated method stub
		AlertDialog.Builder builder=new Builder(mActivity);
		builder.setMessage("确定要删除该条记录吗？");
		builder.setNegativeButton("取消", new OnClickListener() {		
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				return;
			}
		});
		builder.setPositiveButton("确定", new OnClickListener() {	
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				Redservice service=new Redservice(mActivity);
				service.deletereds(mActivity,list.get(position));
			    list.remove(position);
			    myAdapter.notifyDataSetChanged();
			}
		});	
		builder.create().show();
	}
	private List<redsbean> getData() {
//		List<redsbean> listredsList=new ArrayList<redsbean>();
		Redservice serverce=new Redservice(mActivity);
		List<redsbean> redsbeanlist = new ArrayList<redsbean>();
//		Variable variable = new Variable();
		redsbeanlist =serverce.getreds(mActivity);
//		Log.e("size", redsbeanlist.size()+"");
		return  redsbeanlist;
	}
}
