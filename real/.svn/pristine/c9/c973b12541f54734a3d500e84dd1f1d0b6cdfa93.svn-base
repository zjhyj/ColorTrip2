package com.whut.myMap;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.makeramen.RoundedImageView;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.whut.myMap.adapter.ConcernListAdapter.ViewHolder;
import com.whut.myMap.domain.adviser;
import com.whut.myMap.domain.concernview;
import com.whut.myMap.domain.jifenshop;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.domain.userall;
import com.whut.myMap.entites.jifenhistory;
import com.whut.myMap.serverce.Redservice;
import com.whut.myMap.utils.JifenUtils;
import com.whut.myMap.utils.gsonutil;
import com.whut.net.returnhistorybuy;
import com.whut.net.returnlistadviser;

import android.app.ActionBar;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.app.AlertDialog.Builder;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.graphics.BitmapFactory;
import android.graphics.Bitmap.Config;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

public class JifenActivity extends Activity {
	private static final int SHOW_RESPONSE = 0;
	private static final int BUY = 1;
	private ActionBar mActionBar;
	private List<jifenshop> mList;
	private List<jifenhistory> buyList;
	private ListView mListView;
	private JifenListAdapter JifenListAdapter;
	TextView point;
	private int points;
	private int existpoint;
	private ProgressDialog pd;
	protected static String jsonstring;
	private Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case SHOW_RESPONSE:
				Log.i("zai", "enene2");
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					int xiaofei = 0;
					System.out.println(jsonstring);
					if (jsonstring != null && jsonstring.length() > 0) {
						gsonutil gson = new gsonutil();
						buyList = (ArrayList<jifenhistory>) gson.fromJsonList(jsonstring, jifenhistory.class);
						for (int i = 0; i < buyList.size(); i++) {
							xiaofei += buyList.get(i).getCost();
						}
					}
					existpoint = points - xiaofei;
					point.setText(existpoint + "");
					pd.dismiss();
				} else {
					Toast.makeText(JifenActivity.this, "获取数据失败，请重新尝试！", 1).show();
					pd.dismiss();
					return;
				}
				break;
			case BUY:
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "eneneq");
					gsonutil gson = new gsonutil();
					buyList = (ArrayList<jifenhistory>) gson.fromJsonList(jsonstring, jifenhistory.class);
					int xiaofei = 0;
					for (int i = 0; i < buyList.size(); i++) {
						xiaofei += buyList.get(i).getCost();
					}
					existpoint = points - xiaofei;
					point.setText(existpoint + "");
					Toast.makeText(getApplication(), "兑换成功", 0);
					pd.dismiss();
				} else {
					Toast.makeText(JifenActivity.this, "请检查您的网络！", 0).show();
					pd.dismiss();
					return;
				}
				break;

			}
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.listview_container_jifen);
		Intent intent = getIntent();
		points = intent.getIntExtra("point", 0);
		mList = JifenUtils.getGoods();
		mListView = (ListView) findViewById(R.id.fs_listview);
		init();
		JifenListAdapter = new JifenListAdapter();
		mListView.setAdapter(JifenListAdapter);
		pd = ProgressDialog.show(this, "标题", "加载中，请稍等");
		getinfo();

	}

	private void getinfo() {
		// TODO Auto-generated method stub
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					String jsonstring1 = returnhistorybuy.returnListhistorybuy();
					if (jsonstring1 != null) {
						Log.i("resultjson", jsonstring1);
						jsonstring = jsonstring1;
						result = 1 + "";
					}
				} catch (Exception e) {
					// TODO: handle exception
					result = "0";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = SHOW_RESPONSE;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	private void init() {
		// TODO Auto-generated method stub
		LayoutInflater inflater = LayoutInflater.from(JifenActivity.this);
		View placeHolderView = inflater.inflate(R.layout.jifenshop_head, null);
		point = (TextView) placeHolderView.findViewById(R.id.point);
		Button showbuy = (Button) placeHolderView.findViewById(R.id.show_buy);
		showbuy.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(JifenActivity.this, HistoryBuy.class);
				String buy=gsonutil.createJsonString(buyList);
				intent.putExtra("buy", buy);
				startActivity(intent);
				overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			}
		});
		placeHolderView.setBackgroundColor(0xFFFFFFFF);
		mListView.addHeaderView(placeHolderView);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		super.onCreateOptionsMenu(menu);
		getMenuInflater().inflate(R.menu.medal_info, menu);
		mActionBar = getActionBar();
		mActionBar.setTitle(R.string.jifen);
		mActionBar.setDisplayHomeAsUpEnabled(true);
		mActionBar.setDisplayShowHomeEnabled(false);
		return true;

	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		System.out.println("按下了back键   onBackPressed()");
		showPre();
	}

	public void showPre() {
		// TODO Auto-generated method stub
		finish();
		overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		switch (item.getItemId()) {
		case android.R.id.home:
			finish();
			this.overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
			return true;
		case R.id.info:
			Intent intent = new Intent(JifenActivity.this, JifenInfo.class);
			startActivity(intent);
			overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	private void dialogbuy(final jifenshop jifenshops) {
		// TODO Auto-generated method stub
		AlertDialog.Builder builder = new Builder(JifenActivity.this);
		builder.setMessage("确定兑换？");
		builder.setNegativeButton("取消", new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				return;
			}
		});
		builder.setPositiveButton("确定", new DialogInterface.OnClickListener() {
			@Override
			public void onClick(DialogInterface dialog, int which) {
				// TODO Auto-generated method stub
				if (existpoint >= jifenshops.getCost()) {
					pd = ProgressDialog.show(JifenActivity.this, "标题", "兑换中...");
					buynet(jifenshops);
				} else {
					Toast.makeText(getApplication(), "积分不足！TAT", 0).show();
				}
			}
		});
		builder.create().show();
	}

	protected void buynet(final jifenshop jifenshops) {
		// TODO Auto-generated method stub
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					Map<String, String> param = new HashMap<String, String>();
					param.put("goods_id", jifenshops.getGoods_id() + "");
					String jsonstring1 = returnhistorybuy.addbuy(param);
					if (jsonstring1 != null) {
						Log.i("resultjson", jsonstring1);
						jsonstring = jsonstring1;
						result = 1 + "";
					}
				} catch (Exception e) {
					// TODO: handle exception
					result = "0";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = BUY;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	public class JifenListAdapter extends BaseAdapter {
		// private int user_id;

		public JifenListAdapter() {
			// TODO Auto-generated constructor stub
			super();
		}

		@Override
		public int getCount() {
			return mList.size();
		}

		@Override
		public Object getItem(int position) {
			return position;
		}

		@Override
		public long getItemId(int position) {
			// TODO Auto-generated method stub
			return position;
		}

		@Override
		public View getView(int position, View convertView, ViewGroup parent) {
			ViewHolder holder = null;
			if (convertView == null) {
				holder = new ViewHolder();
				LayoutInflater mInflater = LayoutInflater.from(JifenActivity.this);
				convertView = mInflater.inflate(R.layout.gift_item, null);
				holder.jifen = (TextView) convertView.findViewById(R.id.money);
				holder.cost = (TextView) convertView.findViewById(R.id.jifen_num);
				holder.buy = (Button) convertView.findViewById(R.id.buy);
				holder.adView=(ImageView) convertView.findViewById(R.id.adv);
				convertView.setTag(holder);
			} else {
				holder = (ViewHolder) convertView.getTag();
			}
			final jifenshop sp = mList.get(position);
			if (mList != null) {
				if (holder.jifen != null) {
					holder.jifen.setText(sp.getValue() + "");
				}
				if (holder.cost != null) {
					holder.cost.setText(sp.getCost() + "");
				}
				if (holder.buy != null) {
					holder.buy.setOnClickListener(new OnClickListener() {

						@Override
						public void onClick(View v) {
							// TODO Auto-generated method stub
							dialogbuy(sp);
						}
					});
				}
				if (holder.adView!=null) {
					holder.adView.setImageResource(sp.getAdvertisement());
				}
			}
			return convertView;
		}

		public final class ViewHolder {
			public TextView jifen;
			public TextView cost;
			public Button buy;
			public ImageView  adView;
		}

	}

}
