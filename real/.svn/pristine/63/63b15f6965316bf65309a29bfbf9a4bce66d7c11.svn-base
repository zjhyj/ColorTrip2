package com.whut.myMap;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.whut.myMap.TakePhoto.GridAdapter;
import com.whut.myMap.domain.adviser;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.entites.url;
import com.whut.myMap.utils.Bimp;
import com.whut.net.getredsbytimenet;
import com.whut.net.returnlistadviser;

import android.app.ActionBar;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager;
import android.graphics.Color;
import android.graphics.Bitmap.Config;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.ColorDrawable;
import android.net.Uri;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.provider.MediaStore;
import android.util.Log;
import android.view.Gravity;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.view.animation.AnimationUtils;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;

public class PersonalAdviserMain extends Activity {
	private ActionBar mActionBar;
	private adviser adv;
	private RelativeLayout ll_popup;
	private final int SHOW_RESPONSE = 0;
	protected String jsonstring;
	private View parentView;
	private Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			switch (msg.what) {
			case SHOW_RESPONSE:
				Log.i("zai", "enene2");
				if (msg.obj != null) {
					Log.i("zai", "enene");
					if (Integer.parseInt((String) msg.obj) == 1) {
						Log.i("zai", "enene3");
						if (jsonstring.equals("1")) {
							Toast.makeText(PersonalAdviserMain.this, "选择成功！", 0);
						} else {
							Toast.makeText(getApplication(), "网络异常，请检查网络！！", 1).show();
						}
						// 返回给上一activity
					} else {
						Toast.makeText(getApplication(), "网络异常，请检查网络！！", 1).show();
						return;
					}
				}
			}
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		parentView = getLayoutInflater().inflate(R.layout.adviser_main, null);
		setContentView(parentView);
		Intent intent = getIntent();
		Bundle bundle = intent.getExtras();
		adv = (adviser) bundle.getSerializable("adviser");
		ImageView portrait = (ImageView) findViewById(R.id.portrait);
		TextView name = (TextView) findViewById(R.id.name);
		TextView serve = (TextView) findViewById(R.id.serve);
		TextView weixin = (TextView) findViewById(R.id.weixin);
		TextView phone = (TextView) findViewById(R.id.phone);
		TextView instruction = (TextView) findViewById(R.id.instruction);
		try {
			DisplayImageOptions options = new DisplayImageOptions.Builder()//
					.showImageOnLoading(R.drawable.plugin_camera_no_pictures) // 加载中显示的默认图片
					.showImageOnFail(R.drawable.background_failed) // 设置加载失败的默认图片
					.cacheInMemory(true) // 内存缓存
					.bitmapConfig(Config.RGB_565)// 设置最低配置
					.build();
			ImageLoader.getInstance().displayImage(adv.getPortrait(), portrait, options);
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		name.setText(adv.getName());
		serve.setText("服务" + adv.getServetime() + "次");
		instruction.setText(adv.getInstruction());
		weixin.setText(adv.getWeixin());
		phone.setText(adv.getPhone());
		Init();
		
	}
	public void Init() {
		ll_popup = (RelativeLayout) findViewById(R.id.ll_popup);
		ll_popup.setVisibility(View.VISIBLE);
		ImageView close = (ImageView)findViewById(R.id.close);
		Button yes = (Button)findViewById(R.id.yes);
		Button no = (Button)findViewById(R.id.no);
		
		close.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ll_popup.setVisibility(View.GONE);
			}
		});
		yes.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ll_popup.setVisibility(View.GONE);
				addAdviser();
			}
		});
		no.setOnClickListener(new OnClickListener() {
			public void onClick(View v) {
				ll_popup.setVisibility(View.GONE);
			}
		});

	}

	protected void addAdviser() {
		// TODO Auto-generated method stub
		// Variable variable=new Variable();
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					Map<String, String> param = new HashMap<String, String>();
					SharedPreferences settings = getSharedPreferences("userInfo", 0);
					// 2、取出数据
					int user_id = settings.getInt(url.SPUSER_ID, 0);
					param.put("userid", user_id + "");
					param.put("adviserid", adv.getAdviser_id() + "");
					returnlistadviser returnlistadviser = new returnlistadviser();
					String jsonstring1 = returnlistadviser.addAdviser(param);
					if (jsonstring1 != null && jsonstring1.length() > 0) {
						jsonstring = jsonstring1;
						result = "1";
					} else {
						result = "0";
					}
				} catch (Exception e) {
					// TODO: handle exception
					e.printStackTrace();
					result = "0";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = SHOW_RESPONSE;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		super.onCreateOptionsMenu(menu);
		mActionBar = getActionBar();
		mActionBar.setTitle(R.string.personal_adviser);
		mActionBar.setDisplayHomeAsUpEnabled(true);
		mActionBar.setDisplayShowHomeEnabled(false);
		return true;
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		System.out.println("按下了back键   onBackPressed()");
		showPre();
	}

	public void showPre() {
		// TODO Auto-generated method stub
		finish();
		overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		switch (item.getItemId()) {
		case android.R.id.home:
			finish();
			this.overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}
}
