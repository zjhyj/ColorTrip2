package com.whut.net;

import java.io.File;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.R.integer;
import android.R.interpolator;
import android.app.Service;
import android.content.Context;
import android.os.Message;
import android.util.Log;

import com.baidu.mapapi.model.LatLng;

import com.baidu.mapapi.model.LatLng;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.domain.trackbean;
import com.whut.myMap.entites.lbs;
import com.whut.myMap.entites.track;
import com.whut.myMap.entites.url;
import com.whut.myMap.serverce.trackservice;
import com.whut.myMap.utils.gsonutil;
import com.whut.myMap.utils.httpclient;

public class addtracknet {
	public String  addtrackbean(trackbean trackbean,Context context){
		try{
		int trackid=Integer.parseInt(addtrack(trackbean.getLbsbean(), trackbean.getTrack()));
		if(trackid==0){
			int a=1/0;
		}
		addredsnet addredsnet=new addredsnet();
		if(trackbean.getRedsbean()!=null){
		for(redsbean redsbean:trackbean.getRedsbean()){
			redsbean.getReds().setTrack_id(trackid);
		 	int result=Integer.parseInt(addredsnet.addreds(redsbean));
		 	if(result==0){
		 		int a=1/0;
		 	}
		 }
		}
		return 1+"";
		}catch(Exception e){
			e.printStackTrace();
			return 0+"";
		}	
	}
    public String addtrack(List<lbs> list,track track) {
    	try{
    	httpclient http=new httpclient();
		Map<String ,String > parsm=new HashMap<String, String>();	
		String jsonString1=gsonutil.createJsonString(list);
		String jsonString2=gsonutil.createJsonString(track);
		Log.i("lbsstring", jsonString1);
		Log.i("lbsstring", jsonString2);
		for (int i = 0; i < list.size(); i++) {
			Log.i("lbsiscontain", list.get(i).getIscontain()+"");
		}
		parsm.put("listlbs",jsonString1);
	    parsm.put("track", jsonString2);
	    List<File> fList=new ArrayList<File>();
	    File f=new File(track.getBgurl());
		fList.add(f);
		return http.uploadSubmit(new url().geturl()+"/servlet/addtrackNEW", parsm, fList);
    }catch(Exception e){
    	e.printStackTrace();
    	throw new RuntimeException(e);
      }
	}    
}
