package com.whut.myMap;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

import com.igexin.sdk.PushManager;
import com.makeramen.RoundedImageView;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.whut.myMap.adapter.ListViewAdapter_speak_point;
import com.whut.myMap.domain.redsbean;
import com.whut.myMap.entites.url;
import com.whut.myMap.entites.user;
import com.whut.myMap.layout.PullToRefreshLayout;
import com.whut.myMap.layout.PullToRefreshLayout.OnRefreshListener;
import com.whut.myMap.layout.PullableListView;
import com.whut.myMap.layout.PullableListView.OnLoadListener;
import com.whut.myMap.utils.gsonutil;
import com.whut.net.changeConcern;
import com.whut.net.getmydongtaiPointnet;
import com.whut.net.getuserdongtainet;
import com.whut.net.loginnet;

import android.app.ActionBar;
import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Intent;
import android.content.SharedPreferences;
import android.graphics.Bitmap.Config;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AbsListView;
import android.widget.AdapterView;
import android.widget.TextView;
import android.widget.Toast;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.Button;

public class UserMain extends Activity implements OnLoadListener, OnRefreshListener {

	private ActionBar mActionBar;
	private static final int SHOW_RESPONSE = 0;
	private static final int SHOW_RESPONSE_FIRST = 1;
	private static String jsonstring;
	private static String jsonstring2;
	private static ArrayList<redsbean> person;
	private LinkedList<redsbean> mList;
	private ListViewAdapter_speak_point myAdapter;
	private PullableListView listView;
	private PullToRefreshLayout mPullToRefreshLayout;
	private Button Concern_btn;
	private int concerned_user_id;
	private int user_id;
	private String name;
	private String head_url;
	private static boolean isInit = true;
	private static boolean isconcern = false;
	public static final boolean NEEDS_PROXY = Integer.valueOf(Build.VERSION.SDK_INT).intValue() < 11;
	protected static final int SHOW_RESPONSE_XIALA = 2;
	protected static final int SHOW_CONCERN = 3;
	protected static final int PRESS_CONCERN = 4;
	private Handler handler = new Handler() {
		public void handleMessage(Message msg) {
			person = new ArrayList<redsbean>();
			switch (msg.what) {
			case SHOW_RESPONSE:
				Log.i("zai", "enene2");
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					gsonutil gson = new gsonutil();
					Log.i("json", jsonstring);
					person = (ArrayList<redsbean>) gson.fromJsonList(jsonstring, redsbean.class);
					for (int i = 0; i < person.size(); i++) {
						mList.add(person.get(i));
					}
					myAdapter.notifyDataSetChanged();
					listView.finishLoading();
				} else {
					Toast.makeText(UserMain.this, "没有更多了！", 0).show();
					listView.finishLoading();
					return;
				}
				break;
			case SHOW_RESPONSE_XIALA:
				Log.i("zai", "enene2");
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					gsonutil gson = new gsonutil();
					Log.i("json", jsonstring);
					person = (ArrayList<redsbean>) gson.fromJsonList(jsonstring, redsbean.class);
					for (int i = person.size() - 1; i >= 0; i--) {
						mList.addFirst(person.get(i));
					}
					myAdapter.notifyDataSetChanged();
					mPullToRefreshLayout.refreshFinish(PullToRefreshLayout.SUCCEED);
				} else {
					Toast.makeText(UserMain.this, "没有更多了！", 0).show();
					mPullToRefreshLayout.refreshFinish(PullToRefreshLayout.SUCCEED);
					return;
				}
				break;
			case SHOW_RESPONSE_FIRST:
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					gsonutil gson = new gsonutil();
					Log.i("json", jsonstring);
					person = (ArrayList<redsbean>) gson.fromJsonList(jsonstring, redsbean.class);
					for (int i = 0; i < person.size(); i++) {
						mList.add(person.get(i));
					}
					myAdapter.notifyDataSetChanged();
					listView.finishLoading();
				} else {
					Toast.makeText(UserMain.this, "请检查您的网络！", 0).show();
					listView.finishLoading();
					return;
				}
				break;
			case SHOW_CONCERN:
				if (Integer.parseInt((String) msg.obj) == 1) {
					Log.i("zai", "enene");
					Log.i("zai", "enene3");
					gsonutil gson = new gsonutil();
					Log.i("json", jsonstring);
					Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_bg);
					isconcern = true;
					Concern_btn.setText("已关注");
				} else if (Integer.parseInt((String) msg.obj) == 0) {

					Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_hover);
					isconcern = false;
					Concern_btn.setText("关注");

				} else {
					Toast.makeText(UserMain.this, "请检查您的网络！", 0).show();
					return;
				}

				break;
			case PRESS_CONCERN:
				if (Integer.parseInt((String) msg.obj) != 1) {

					if (!isconcern) {
						Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_bg);
						isconcern = true;
						Concern_btn.setText("已关注");

					} else {
						Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_hover);
						isconcern = false;
						Concern_btn.setText("关注");
					}
					Toast.makeText(UserMain.this, "请检查您的网络！", 0).show();
					return;
				}

				break;
			}
		}
	};

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.user_main);
		Intent intent = getIntent();
		concerned_user_id = intent.getIntExtra("userid", 0);
		name = intent.getStringExtra("name");
		head_url = intent.getStringExtra("head");
		person = new ArrayList<redsbean>();
		mList = new LinkedList<redsbean>();
		mPullToRefreshLayout = ((PullToRefreshLayout) findViewById(R.id.refresh_view));
		mPullToRefreshLayout.setOnRefreshListener(this);
		listView = (PullableListView) findViewById(R.id.content_view);
		mPullToRefreshLayout = (PullToRefreshLayout) findViewById(R.id.refresh_view);
		initConcern();
		initListView();
		listView.setOnLoadListener(this);

	}

	private void initConcern() {
		// TODO Auto-generated method stub
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					String jsonstring1;
					Map<String, String> param = new HashMap<String, String>();
					param.put("concerned_user_id", concerned_user_id + "");
					jsonstring1 = changeConcern.returnConcern(param);
					System.out.println(jsonstring1);
					if (jsonstring1 != null && jsonstring1.length() > 0 && jsonstring1.equals("1")) {
						jsonstring = jsonstring1;
						result = "1";
					} else {
						result = "0";
						return;
					}
				} catch (Exception e) {
					// TODO: handle exception
					result = "2";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = SHOW_CONCERN;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	/**
	 * ListView初始化方法
	 */
	private void initListView() {
		LayoutInflater inflater = LayoutInflater.from(UserMain.this);
		View placeHolderView = inflater.inflate(R.layout.user_main_head, null);
		TextView nameTv = (TextView) placeHolderView.findViewById(R.id.name);
		RoundedImageView headIv = (RoundedImageView) placeHolderView.findViewById(R.id.head);
		TextView youji = (TextView) placeHolderView.findViewById(R.id.youji);
		TextView info = (TextView) placeHolderView.findViewById(R.id.info);
		Concern_btn = (Button) placeHolderView.findViewById(R.id.concern_btn);
		SharedPreferences userPreferences = getSharedPreferences("userInfo", 0);
		user_id = userPreferences.getInt(url.SPUSER_ID, 0);
		if (user_id == concerned_user_id) {
			Concern_btn.setVisibility(View.GONE);
		} else {
			Concern_btn.setOnClickListener(concernListener);
		}
		youji.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(UserMain.this, User_Main_Route.class);
				intent.putExtra("userid", concerned_user_id);
				startActivityForResult(intent, 0);
				overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			}
		});
		info.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				Intent intent = new Intent(UserMain.this, UserInfoOther.class);
				intent.putExtra("userid", concerned_user_id);
				startActivityForResult(intent, 0);
				overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
			}
		});
		try {
			DisplayImageOptions options = new DisplayImageOptions.Builder()//
					.showImageOnLoading(R.drawable.default_head) // 加载中显示的默认图片
					.showImageOnFail(R.drawable.default_head) // 设置加载失败的默认图片
					.cacheInMemory(true) // 内存缓存
					.cacheOnDisk(true) // sdcard缓存
					.bitmapConfig(Config.RGB_565)// 设置最低配置
					.build();//
			ImageLoader.getInstance().displayImage(head_url, headIv, options);
		} catch (Exception e) {
			headIv.setImageResource(R.drawable.default_head);
		}
		nameTv.setText(name);
		placeHolderView.setBackgroundColor(0xFFFFFFFF);
		listView.addHeaderView(placeHolderView);
		List<String> items = new ArrayList<String>();
		for (int i = 0; i < 10; i++) {
			items.add("这里是item " + i);
		}
		myAdapter = new ListViewAdapter_speak_point(mList, UserMain.this);
		listView.setAdapter(myAdapter);
		listView.setOnItemClickListener(new OnItemClickListener() {

			@Override
			public void onItemClick(AdapterView<?> parent, View view,
					int position, long id) {
				// TODO Auto-generated method stub
				if(position>=0){
				Intent intent = new Intent(UserMain.this, Speak_MainNET.class);
				Bundle bundle=new Bundle();
				bundle.putSerializable("speak_item", mList.get(position));
//				intent.putExtra("fragment", 1);
				intent.putExtras(bundle);
				startActivityForResult(intent, 1);
				overridePendingTransition(R.anim.tran_in, R.anim.tran_out);
				}
			}
		});
	}

	private OnClickListener concernListener = new OnClickListener() {

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			if (!isconcern) {
				Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_bg);
				isconcern = true;
				Concern_btn.setText("已关注");

			} else {
				Concern_btn.setBackgroundResource(R.drawable.mini_btn_confirm_hover);
				isconcern = false;
				Concern_btn.setText("关注");
			}
			new Thread(new Runnable() {
				String result;

				@Override
				public void run() {
					// TODO Auto-generated method stub
					try {
						Map<String, String> param = new HashMap<String, String>();
						if (isconcern) {
							param.put("isconcern", 1 + "");
						} else {
							param.put("isconcern", 0 + "");
						}
						param.put("concerned_user_id", concerned_user_id + "");
						String jsonstring1;
						jsonstring1 = changeConcern.changeFocus(param);
						System.out.println(jsonstring1);
						if (jsonstring1 != null && jsonstring1.length() > 0) {
							jsonstring = jsonstring1;
							result = "1";
						} else {
							result = "0";
							return;
						}
					} catch (Exception e) {
						// TODO: handle exception
						result = "2";
					} finally {
						Log.i("result", result.toString());
						Message message = new Message();
						message.what = PRESS_CONCERN;
						message.obj = result.toString();
						handler.sendMessage(message);
					}
				}
			}).start();
		}
	};

	@Override
	public void onLoad(final PullableListView pullableListView) {

		person = new ArrayList<redsbean>();
		// Variable variable=new Variable();
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					int redsid;
					try {
						redsid = mList.getLast().getReds().getReds_id();
					} catch (Exception e) {
						// TODO: handle exception
						redsid = 0;
					}
					Map<String, String> param = new HashMap<String, String>();
					param.put("userid", concerned_user_id + "");
					param.put("redsid", redsid + "");
					param.put("flag", 0 + "");
					getuserdongtainet getmydongtaiPointnet = new getuserdongtainet();
					String jsonstring1 = getmydongtaiPointnet.getflaguserdongtaiPoint(param);
					System.out.println(jsonstring1);
					if (jsonstring1 != null && jsonstring1.length() > 0) {
						jsonstring = jsonstring1;
						result = "1";
					} else {
						result = "0";
					}
				} catch (Exception e) {
					// TODO: handle exception
					result = "2";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					if (isInit) {
						message.what = SHOW_RESPONSE_FIRST;
						isInit = false;
					} else {
						message.what = SHOW_RESPONSE;
					}

					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

	public boolean onCreateOptionsMenu(Menu menu) {
		// TODO Auto-generated method stub
		super.onCreateOptionsMenu(menu);
		mActionBar = getActionBar();
		mActionBar.setTitle(R.string.user_main);
		mActionBar.setDisplayHomeAsUpEnabled(true);
		mActionBar.setDisplayShowHomeEnabled(false);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		// TODO Auto-generated method stub
		switch (item.getItemId()) {
		case android.R.id.home:
			finish();
			this.overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
			return true;
		default:
			return super.onOptionsItemSelected(item);
		}
	}

	@Override
	public void onBackPressed() {
		super.onBackPressed();
		System.out.println("按下了back键   onBackPressed()");
		overridePendingTransition(R.anim.tran_pre_in, R.anim.tran_pre_out);
	}

	@Override
	public void onRefresh(final PullToRefreshLayout pullToRefreshLayout) {
		// TODO Auto-generated method stub
		// 下拉刷新操作
		person = new ArrayList<redsbean>();
		// Variable variable=new Variable();
		new Thread(new Runnable() {
			String result;

			@Override
			public void run() {
				// TODO Auto-generated method stub
				try {
					int redsid;
					try {
						redsid = mList.getFirst().getReds().getReds_id();
					} catch (Exception e) {
						// TODO: handle exception
						redsid = 0;
					}
					Map<String, String> param = new HashMap<String, String>();
					param.put("userid", concerned_user_id + "");
					param.put("redsid", redsid + "");
					param.put("flag", 1 + "");
					getuserdongtainet getmydongtaiPointnet = new getuserdongtainet();
					String jsonstring1 = getmydongtaiPointnet.getflaguserdongtaiPoint(param);
					System.out.println(jsonstring1);
					if (jsonstring1 != null && jsonstring1.length() > 0) {
						jsonstring = jsonstring1;
						result = "1";
					} else {
						result = "0";
					}
				} catch (Exception e) {
					// TODO: handle exception
					result = "2";
				} finally {
					Log.i("result", result.toString());
					Message message = new Message();
					message.what = SHOW_RESPONSE_XIALA;
					message.obj = result.toString();
					handler.sendMessage(message);
				}
			}
		}).start();
	}

}